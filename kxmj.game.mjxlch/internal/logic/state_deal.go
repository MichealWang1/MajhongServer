package logic

import (
	"kxmj.common/log"
	lib "kxmj.common/mahjong"
)

var AllCards = lib.Cards{
	0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 1-9万
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 1-9条
	0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 1-9筒

	0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 1-9万
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 1-9条
	0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 1-9筒

	0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 1-9万
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 1-9条
	0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 1-9筒

	0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 1-9万
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 1-9条
	0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 1-9筒
}

// 发牌数据
type DealStateData struct {
	cardStack *lib.CardStack
}

func NewDealStateData() *DealStateData {
	d := &DealStateData{
		cardStack: lib.NewCardStack(AllCards),
	}
	return d
}

func (d *DealStateData) Reset() {
	d.cardStack.Reset()
}

func (d *DealStateData) GetCardStack() *lib.CardStack {
	return d.cardStack
}

// DealCards 发牌
func (g *GameRunTimeData) DealCards() {
	playerNum := g.RuleConfig.GetPlayerNums()
	n := 13 // 手牌数量
	for i := int32(0); i < playerNum; i++ {
		cards, err := g.DealData.GetCardStack().PickUpCards(n)
		if err != nil {
			log.Sugar().Errorf("DealCards pick up cards error: %v", err)
			return
		}
		g.PlayData.SetUserHandCards(i, cards)
	}
	log.Sugar().Info("DealCards user hand cards: %v", g.PlayData.GetUserHandCardsTable().GetTable())
}
